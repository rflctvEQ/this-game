{"version":3,"sources":["pages/P1TypeName/index.tsx","components/LoadingScreen/index.tsx","pages/P2LoadingScreen.tsx","components/P3Welcome/index.tsx","components/Doug/index.tsx","components/SpeechBox/index.tsx","pages/P3WelcomeDoug.tsx","components/P4FifthGraderMath/index.tsx","pages/P4FifthGraderMath.tsx","components/P5DifficultQuestion/index.tsx","components/P5HiddenDev/index.tsx","pages/P5HiddenDev.tsx","components/P6OnePlusOne/index.tsx","pages/P6OnePlusOne.tsx","components/P7RhodeIsland/index.tsx","pages/P7No.tsx","components/P8BalloonAndImperative/index.tsx","pages/P8PopTheBalloon/index.tsx","components/P9ExecuteProtocol/index.tsx","pages/P9ExecuteProtocol.tsx","pages/RebootSequence.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["TypeName","useState","nameState","setNameState","visible","setVisible","characterNumber","setCharacterNumber","username","trim","useEffect","calculateInputWidth","inputWidth","inputLength","length","history","useHistory","Helmet","className","value","onChange","e","target","style","width","display","onClick","localStorage","setItem","console","log","getItem","push","LoadingScreen","quip","setQuip","quipArray","setTimeout","LoadingScreenPage","content","Welcome","inputState","setInputState","textColor","setTextColor","color","Doug","props","visibility","setVisibility","window","location","pathname","componentVisibility","opacity","SpeechBox","index","setIndex","noDialogue","setNoDialogue","dialogue","propsDialogue","setPropsDialogue","propsComponentVisibility","setPropsComponentVisibility","dialogueItemsLength","dialogueData","WelcomeDoug","data","setData","isComponentVisible","setIsComponentVisible","state","border","backgroundColor","position","left","top","FifthGradeMath","answerValue","setAnswerValue","isNumber","parseInt","type","mathHint","FifthGraderMath","DifficultQuestion","answer","toLowerCase","HiddenDevText","hiddenHint","HiddenDev","OnePlusOneComponent","easyHint","OnePlusOne","RhodeIsland","noHint","No","BalloonAndImperative","horizontalPos","setHorizontalPos","verticalPos","setVerticalPos","min","max","Math","ceil","floor","randomHorizontalValue","random","randomVerticalValue","setRandomBalloonPos","popHint","PopTheBalloon","hintClicked","setHintClicked","balloonClicked","setBalloonClicked","help","setHelp","btnText","setBtnText","ExecuteProtocolComponent","executeHint","ExecuteProtocol","RebootSequence","setBackgroundColor","reboot","setReboot","config","setConfig","load","setLoad","contact","setContact","period","setPeriod","period2","setPeriod2","period3","setPeriod3","alert","open","height","fontFamily","App","exact","path","P1TypeName","P2LoadingScreen","P3WelcomeDoug","P7No","P8PopTheBalloon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03beb94b.chunk.js","sourcesContent":["import { Helmet } from 'react-helmet';\nimport * as React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs'\nimport './style.css'\n\nfunction TypeName() {\n    const [ nameState, setNameState ] = useState<string>('here');\n    const [ visible, setVisible ] = useState<string>('none')\n    const [ characterNumber, setCharacterNumber ] = useState<number>();\n    const username = nameState.trim();\n\n    useEffect(() => {\n        // button to continue appears when user enters name \n        if (username !== 'here' && username !== '') {\n            setVisible('initial');\n        } else {\n            setVisible('none');\n        }\n        calculateInputWidth();\n    })\n\n    // makes input width reactive to text length\n    const inputWidth = characterNumber + 'rem';\n    const calculateInputWidth = () => {\n        let inputLength: number = nameState.length;\n        setCharacterNumber(inputLength * 1.375)\n    }\n\n    const history = useHistory();\n\n    // save name to localStorage and send user to next page \n    const btnHandler = () => {\n        localStorage.setItem('username', nameState);\n        console.log('name ', localStorage.getItem('username'));\n        history.push('/load')\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>Enter name</title>\n            </Helmet>\n            <main className='wrapper'>\n                <div className='typeNameHere'>\n                    <h1 className='typeYourName'>\n                        Type your name\n                        <input \n                            className='inputHere' \n                            value={nameState} \n                            onChange={e => setNameState(e.target.value)} \n                            style={{ width: `${inputWidth}`}}>\n                        </input>\n                    </h1>\n                </div>\n                <div className='btnDiv'>\n                    <button \n                        className='confirmBtn' \n                        style={{ display: `${visible}` }}\n                        onClick={() => btnHandler()}>\n                            Continue{' '}\n                            <BsFillArrowRightCircleFill />\n                    </button>\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default TypeName;","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport './style.css';\n\nfunction LoadingScreen() {\n    const [quip, setQuip] = useState<string>('Loading game...');\n\n    const quipArray = [\n        'Waiting for server...',\n        'Logging you in...',\n        'Rendering...',\n        'Who\\'s there?'\n    ]\n\n    useEffect(() => {\n        if (quip === 'Loading game...') {\n            setTimeout(() => {\n                setQuip(quipArray[0]);\n            }, 2000)\n        } else if (quip === quipArray[0]) {\n            setTimeout(() => {\n                setQuip(quipArray[1]);\n            }, 1500)\n        } else if (quip === quipArray[1]) {\n            setTimeout(() => {\n                setQuip(quipArray[2])\n            }, 1000)\n        } else if (quip === quipArray[2]) {\n            setTimeout(() => {\n                setQuip(quipArray[3])\n            }, 1400)\n        }\n    })\n\n    return (\n        <div className='outerWrapper'>\n            <div className='innerWrapper'>\n                <div className='headingWrapper'>\n                    <h1 className='loadingText'>{quip}</h1>\n                </div>\n                {/* loading animation */}\n                <div className=\"animationWrapper\">\n                    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoadingScreen;","import * as React from 'react';\nimport LoadingScreen from '../components/LoadingScreen';\nimport Helmet from 'react-helmet';\n\nfunction LoadingScreenPage() {\n    return (\n        <>\n            <Helmet>\n                <title>Loading</title>\n                <meta http-equiv='refresh' content='6; url=/welcome' />\n            </Helmet>\n            <LoadingScreen/>\n        </>\n    )\n}\n\nexport default LoadingScreenPage;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs'\nimport './style.css';\n\nfunction Welcome() {\n    const [inputState, setInputState] = useState<string>('Welcome to');\n    const [visible, setVisible] = useState<string>('none');\n    const [characterNumber, setCharacterNumber] = useState<number>();\n    const [textColor, setTextColor] = useState<string>('rgb(255, 0, 0)');\n\n\n    useEffect(() => {\n        if (inputState === 'Start' || inputState === 'start' || inputState === 'START') {\n            setVisible('initial');\n        } else {\n            setVisible('none');\n        }\n        calculateInputWidth();\n    });\n\n    // makes input width reactive to text length\n    const inputWidth = characterNumber + 'rem';\n    const calculateInputWidth = () => {\n        let inputLength: number = inputState.length;\n        setCharacterNumber(inputLength * 1.375)\n    }\n\n    const history = useHistory<string>();\n    // change color of 'this game' and send user to next page after a moment\n    const btnHandler = () => {\n        setTextColor('green');\n        setTimeout(() => {\n            history.push('/666')\n        }, 1500)\n    }\n\n    return (\n        <>\n            <div className='welcomeDiv'>\n                <h1 className='welcomeTo'>\n                    <input\n                        className='welcomeInput'\n                        value={inputState}\n                        onChange={e => setInputState(e.target.value.trim())}\n                        style={{ width: `${inputWidth}` }}>\n                    </input>\n                </h1>\n                <h1 className='thisGame' style={{ color: `${textColor}` }}>this game</h1>\n                <button\n                    className='continueBtn'\n                    style={{ display: `${visible}` }}\n                    onClick={() => btnHandler()}>\n                    Continue {' '}\n                    <BsFillArrowRightCircleFill />\n                </button>\n            </div>\n        </>\n    )\n};\n\nexport default Welcome;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport './style.css';\n\nfunction Doug(props: any) {\n    const [visibility, setVisibility] = useState<string>('0')\n\n    useEffect(() => {\n        // if on welcome page, set doug to always be visible once rendered first time\n        if (window.location.pathname === '/welcome') {\n            setVisibility('1')\n        } else if (props.componentVisibility === true) {\n            setVisibility('1')\n        } else if (props.componentVisibility === false) {\n            setVisibility('0')\n        }\n    });\n\n    return (\n        <div style={{ opacity: visibility }} className='outerBox'>\n            <div className='innerBox'>\n                <div className='doug'>\n                    <div className='eyeBox'>\n                        <div className='leftEye'></div>\n                        <div className='rightEye'></div>\n                    </div>\n                    <div className='bugBody'> \n                        <div className='mouth'></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Doug;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport './style.css';\n\nfunction SpeechBox(props: any) {\n    // console.log('*** props ***', props);\n    const [ index, setIndex ] = useState<number>(0);\n    const [ noDialogue, setNoDialogue ] = useState<boolean>(false);\n    const [ visible, setVisible ] = useState<string>('0');\n    const [ propsDialogue, setPropsDialogue ] = useState<string[]>(props.dialogue);\n    const [ propsComponentVisibility, setPropsComponentVisibility ] = useState<boolean>(props.componentVisibility);\n\n    // number of dialogue items in props\n    const dialogueItemsLength: number = propsDialogue.length - 1;\n\n    useEffect(() => {\n        // update dialogue and component visibility when props change\n        setPropsDialogue(props.dialogue);\n        setPropsComponentVisibility(props.componentVisibility);\n        if (window.location.pathname === '/welcome' && index < dialogueItemsLength) {\n            setVisible('1');\n        } else if (props.componentVisibility && !noDialogue) {\n            setVisible('1');\n        }\n    })\n\n    // make component visible when component visibility props is true\n    useEffect(() => {\n        if (propsComponentVisibility === true && noDialogue){ \n            setVisible('1');\n            setNoDialogue(false);\n            setIndex(0);\n        } \n    }, [propsComponentVisibility])\n    \n    // go to next dialogue in index or make component invisible if no more dialogue\n    const handleNextBtn = () => {\n        if (index < dialogueItemsLength) {\n            setVisible('1');\n            setNoDialogue(false);\n            setIndex(index + 1);\n        } else {\n            setVisible('0');\n            setNoDialogue(true);\n        }\n    }\n\n    // console.log('component props: ', props);\n    return (\n        <div style={{opacity: visible}} className='speechBoxWrapper'>\n            <div className='speechBox'>\n                <p className='speechText'>{!noDialogue ? propsDialogue[index] : ''}</p>\n            </div>\n            <button className='nextBtn' onClick={()=>handleNextBtn()}>Next</button>\n        </div>\n    )\n};\n\nexport default SpeechBox;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport Welcome from '../components/P3Welcome';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\ninterface DialogueInterface {\n    dialogue?: string[],\n    componentVisibility?: boolean\n}\n\nconst dialogueData: DialogueInterface = {\n    dialogue: [\n        'Oh, hey! There you are!',\n        'I thought someone might have come in.',\n        'You\\'re not really supposed to be here.',\n        'I\\'m Doug, a bug stuck in the server of this game.',\n        'I\\'m gonna try to get you out of here.',\n        'Just click HINT and I\\'ll find you again.',\n        'We can do this... together.'\n    ],\n    componentVisibility: false\n}\n\nfunction WelcomeDoug(props: typeof dialogueData) {\n    const [visible, setVisible] = useState<string>('none');\n    const [data, setData] = useState<any>(dialogueData);\n    const [isComponentVisible, setIsComponentVisible] = useState(dialogueData.componentVisibility);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setVisible('initial');\n            setIsComponentVisible(true);\n        }, 10000)\n    }, [])\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData(() => ({\n                dialogue: ['The server is looking for the phrase \"Start this game.\"', 'Is that helpful? I feel like that\\'s not helpful.', 'Oh, boy...'],\n                componentVisibility: true\n            }))\n        } else {\n\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: false\n            }))\n        }\n\n        // console.log('data from parent page: ', data);\n    }\n\n    return (\n        <>\n            <Helmet><title>Welcome</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px', display: visible }}><h3>HINT</h3></button>\n            <Welcome />\n            {\n                (isComponentVisible === true) ?\n                    <>\n                        <Doug {...data} />\n                        <SpeechBox {...data} />\n                    </> : null\n            }\n        </>\n    )\n}\n\nexport default WelcomeDoug;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\nimport './style.css';\n\nfunction FifthGradeMath() {\n    const [answerValue, setAnswerValue] = useState<string>('');\n    const [visible, setVisible] = useState<string>('none');\n    // converts input string to number \n    const isNumber: number = parseInt(answerValue)\n    const history = useHistory()\n\n    // make button visible if user types in correct answer\n    useEffect(() => {\n        if (isNumber === 666) {\n            setVisible('initial')\n        } else {\n            setVisible('none');\n        }\n    })\n\n    const handleContinue = () => {\n        history.push('/hidden')\n    }\n\n    return (\n        <section className='mathWrapper'>\n            <h1 className='mathQuestion'>What is 18 x 37?</h1>\n            <input\n                className='mathAnswer'\n                value={answerValue}\n                type='number'\n                onChange={e => setAnswerValue(e.target.value)}>\n            </input>\n            <button\n                className='continueBtn'\n                style={{ display: `${visible}` }}\n                onClick={() => handleContinue()}>\n                Continue {' '}\n                <BsFillArrowRightCircleFill />\n            </button>\n        </section>\n    )\n};\n\nexport default FifthGradeMath;","import * as React from 'react';\nimport { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport FifthGradeMath from '../components/P4FifthGraderMath';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst mathHint: DialogueInterface = {\n    dialogue: [\n        '666... creepy.',\n        'You could have used a calculator though.',\n        'It\\'s fine. I\\'m not busy or anything anyway.',\n        'But seriously? A math question?',\n        'Don\\'t worry. I\\'ll get you out of here.'\n    ],\n    componentVisibility: false\n}\n\n\nfunction FifthGraderMath(props: typeof mathHint) {\n    const [ data, setData ] = useState<any>(mathHint);\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n    }\n\n\n    return (\n        <>\n            <Helmet><title>Easy Math</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px' }}><h3>HINT</h3></button>\n            <FifthGradeMath />\n            <Doug {...data} />\n            <SpeechBox {...data} />\n        </>\n    )\n}\n\nexport default FifthGraderMath;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\nimport './style.css';\n\nfunction DifficultQuestion() {\n    const [ answerValue, setAnswerValue ] = useState<string>('');\n    const [ visible, setVisible ] = useState<string>('none');\n    const history = useHistory()\n    // set answerValue to lowercase for easier input handling\n    const answer: string = answerValue.toLowerCase().trim();\n\n    // make button visible if user types in correct answer\n    useEffect(() => {\n        if (answer === 'a simple answer') {\n            setVisible('initial');\n        } else {\n            setVisible('none');\n        }\n    });\n\n    const handleContinue = () => {\n        history.push('/dont-close-this-tab');\n    };\n\n    return (\n        <section className='difficultQuestionWrapper'>\n            <h1 className='difficultQuestion'>What is the answer to this insanely difficult question?</h1>\n            <input\n                className='simpleAnswer'\n                value={answerValue}\n                onChange={e => setAnswerValue(e.target.value)}>\n            </input>\n            <button\n                className='continueBtn'\n                style={{ display: `${visible}` }}\n                onClick={() => handleContinue()}>\n                Continue {' '}\n                <BsFillArrowRightCircleFill />\n            </button>\n        </section>\n    )\n};\n\nexport default DifficultQuestion;","import * as React from 'react';\nimport './style.css';\n\nfunction HiddenDevText() {\n\n    return (\n        <section className='hiddenTextSection'>\n            <p className='paragraph1'>\n                If you're reading this you've either played too many browser games, or you're getting help. I'll keep it brief. What you've seen so far... is not my game. <span className='thisGame'>This game </span>is being ripped apart by a bug in the server. And I can't find the damn thing!\n            </p>\n            <p className='paragraph2'>\n                You shouldn't even have access to <span className='thisGame'>this game</span> since I didn't put it on the internet. But now that you're here, could you help me out? I've deleted and changed a bunch of the following levels to make testing easier. I'll monitor you as you go in case the bug pops up. If it does, DO NOT TRUST HIM.\n            </p>\n            <p className='paragraph3'>\n                Oh yeah, the answer to this puzzle:\n            </p>\n            <p className='paragraph4'>\n                \"a simple answer\"\n            </p>\n\n        </section>\n    )\n};\n\nexport default HiddenDevText;","import * as React from 'react';\nimport { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport DifficultQuestion from '../components/P5DifficultQuestion';\nimport HiddenDevText from '../components/P5HiddenDev';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst hiddenHint: DialogueInterface = {\n    dialogue: [\n        'I\\'m detecting words hidden around here somewhere...',\n        'I wonder if you can highlight them?'\n    ],\n    componentVisibility: false\n}\n\nfunction HiddenDev(props: typeof hiddenHint) {\n    const [ data, setData ] = useState<any>(hiddenHint);\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n    }\n\n    return (\n        <>\n            <Helmet><title>Difficult Question</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px' }}><h3>HINT</h3></button>\n            <DifficultQuestion />\n            <Doug {...data} />\n            <SpeechBox {...data} />\n            <HiddenDevText />\n        </>\n    )\n}\n\nexport default HiddenDev;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\nimport './style.css';\n\nfunction OnePlusOneComponent() {\n    const [answerValue, setAnswerValue] = useState<string>('');\n    const [visible, setVisible] = useState<string>('none');\n    // converts input string to number \n    const isNumber: number = parseInt(answerValue)\n    const history = useHistory()\n\n    // make button visible if user types in correct answer\n    useEffect(() => {\n        if (isNumber === 2) {\n            setVisible('initial')\n        } else {\n            setVisible('none');\n        }\n    })\n\n    const handleContinue = () => {\n        history.push('/no')\n    }\n    \n\n    return (\n        <section className='mathWrapper'>\n            <h1 className='mathQuestion'>What is 1 + 1?</h1>\n            <input\n                className='mathAnswer'\n                value={answerValue}\n                type='number'\n                onChange={e => setAnswerValue(e.target.value)}>\n            </input>\n            <button\n                className='continueBtn'\n                style={{ display: `${visible}` }}\n                onClick={() => handleContinue()}>\n                Continue {' '}\n                <BsFillArrowRightCircleFill />\n            </button>\n        </section>\n    )\n};\n\nexport default OnePlusOneComponent;","import * as React from 'react';\nimport { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport OnePlusOneComponent from '../components/P6OnePlusOne';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst easyHint: DialogueInterface = {\n    dialogue: [\n        'Oh, c\\'mon...',\n        'Don\\'t you wanna get out of here?',\n        'This game isn\\'t fun.',\n        'Now that I think of it, couldn\\'t you leave anytime?',\n        'Play a different game.',\n        'You\\'re wasting your time. Go anywhere else.',\n        'LEAVE.',\n        'You know I read that hidden text too, right?',\n        'Go away.'\n    ],\n    componentVisibility: false\n}\n\nfunction OnePlusOne(props: typeof easyHint) {\n    const [ data, setData ] = useState<any>(easyHint);\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n    }\n\n    return (\n        <>\n            <Helmet><title>Easy Math</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px' }}><h3>HINT</h3></button>\n            <OnePlusOneComponent />\n            <Doug {...data} />\n            <SpeechBox {...data} />\n        </>\n    )\n}\n\nexport default OnePlusOne;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\nimport './style.css';\n\nfunction RhodeIsland() {\n    const [ answerValue, setAnswerValue ] = useState<string>('');\n    const [ visible, setVisible ] = useState<string>('none');\n    const history = useHistory()\n    // set answerValue to lowercase for easier input handling\n    const answer: string = answerValue.toLowerCase().trim();\n\n    // make button visible if user types in correct answer\n    useEffect(() => {\n        if (answer === 'providence') {\n            setVisible('initial');\n        } else {\n            setVisible('none');\n        }\n    });\n\n    const handleContinue = () => {\n        history.push('/pop');\n    };\n\n    return (\n        <section className='rhodeIslandWrapper'>\n            <h1 className='rhodeIslandQuestion'>What is the capital of Rhode Island?</h1>\n            <input\n                className='rhodeIslandAnswer'\n                value={answerValue}\n                onChange={e => setAnswerValue(e.target.value)}>\n            </input>\n            <button\n                className='continueBtn'\n                style={{ display: `${visible}` }}\n                onClick={() => handleContinue()}>\n                Continue {' '}\n                <BsFillArrowRightCircleFill />\n            </button>\n        </section>\n    )\n};\n\nexport default RhodeIsland;","import * as React from 'react';\nimport { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport RhodeIsland from '../components/P7RhodeIsland';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst noHint: DialogueInterface = {\n    dialogue: [\n        'No.'\n    ],\n    componentVisibility: false\n}\n\nfunction No(props: typeof noHint) {\n    const [ data, setData ] = useState<any>(noHint);\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n    }\n\n    return (\n        <>\n            <Helmet><title>Rhode Island</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px' }}><h3>No.</h3></button>\n            <RhodeIsland />\n            <Doug {...data} />\n            <SpeechBox {...data} />\n        </>\n    )\n}\n\nexport default No;","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport './style.css';\n\nfunction BalloonAndImperative() {\n    const [ horizontalPos, setHorizontalPos ] = useState<string>('30%');\n    const [ verticalPos, setVerticalPos ] = useState<string>('30%');\n\n    const setRandomBalloonPos = (min: number, max: number) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n\n        const randomHorizontalValue: number = Math.floor(Math.random() * (max-min) + min);\n        const randomVerticalValue: number = Math.floor(Math.random() * (max-min) + min);\n\n        setHorizontalPos(`${randomHorizontalValue}%`);\n        setVerticalPos(`${randomVerticalValue}%`);\n    }\n\n    return (\n        <section className='popWrapper'>\n            <h1 className='popTitle'>Pop the balloon!</h1>\n            <div className='balloonContainer'>\n                <div className='balloonWrapper' style={{ left: horizontalPos, top: verticalPos }} onClick={() => setRandomBalloonPos(10, 80)}>\n                    <div className=\"balloon balloon-red\">\n                        <div className=\"balloon-ref\"></div>\n                        <span className=\"top-c\"></span>\n                        <span className=\"left-c\"></span>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default BalloonAndImperative;","import { Helmet } from 'react-helmet';\nimport * as React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs'\nimport BalloonAndImperative from '../../components/P8BalloonAndImperative';\nimport Doug from '../../components/Doug';\nimport SpeechBox from '../../components/SpeechBox';\nimport './style.css';\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst popHint: DialogueInterface = {\n    dialogue: [\n        'Just pop the balloon already.',\n        'Or, you know...',\n        'You could always just go away.'\n    ],\n    componentVisibility: false\n}\n\nfunction PopTheBalloon(props: typeof popHint) {\n    const [ data, setData ] = useState<any>(popHint);\n    // used to check whether HINT clicked\n    const [ hintClicked, setHintClicked ] = useState<boolean>(false);\n    // used to track how many times user has clicked balloon\n    const [ balloonClicked, setBalloonClicked ] = useState<number>(0);\n    // track whether to show button\n    const [ help, setHelp ] = useState<boolean>(false);\n    // text within button\n    const [ btnText, setBtnText ] = useState<string>('HELP!!!');\n\n    const history = useHistory();\n\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n\n        setHintClicked(true);\n        console.log(hintClicked)\n    };\n\n    const handleBalloonClick = () => {\n        setBalloonClicked(balloonClicked + 1);\n\n        if (hintClicked && balloonClicked > 4) {\n            setHelp(true);\n            setData((state: any) => ({\n                dialogue: [\n                    'What a pesky thing!',\n                    'At least I was able to locate the bug.',\n                    'Thanks for your help.',\n                    'Ok, let me see...',\n                    'WOW. Ummm, I haven\\'t seen this before.',\n                    'Has the bug tried to get you to leave the game?',\n                    'It wrote code that will allow it to spread to your device...',\n                    '... as soon as you leave the game.',\n                    'What a nightmare.',\n                    'I can fix this. Don\\'t worry, I can fix this.', \n                    'I just need to google something real quick...',\n                    '...',\n                    'Ok, that should do it. Click CONTINUE to go to the final level.',\n                    'You should know what to do.',\n                    'Thanks for your help.'\n                ],\n                componentVisibility: true\n            }))\n\n            // setHelp(false)\n        };\n    };\n\n    const handleHelpBtn = () => {\n        if (btnText === 'HELP!!!') {\n            setBtnText('CONTINUE ');\n        } else if (btnText === 'CONTINUE ') {\n            history.push('/execute');\n        }\n    }\n\n    return (\n        <>\n            <Helmet><title>Pop the Balloon!</title></Helmet>\n            {\n                !help\n                ?\n                <main>\n                    <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '83%', top: '25px' }}><h3>LOL</h3></button>\n                    <section onClick={() => handleBalloonClick()}>\n                        <BalloonAndImperative />\n                    </section>\n                    <Doug {...data}/>\n                    <SpeechBox {...data}/>\n                </main>\n                :\n                <main>\n                    <button className='helpBtn' onClick={() => handleHelpBtn()}>\n                        {btnText}\n                        {\n                            btnText === 'CONTINUE '\n                            ?\n                            <BsFillArrowRightCircleFill />\n                            :\n                            null\n                        }\n                    </button>\n                    {\n                        btnText === 'CONTINUE '\n                        ?\n                        <div className='devSpeechWrapper'>\n                            <SpeechBox {...data} />\n                        </div>\n                        :\n                        null\n                    }\n                </main>\n            }\n        </>\n    )\n}\n\nexport default PopTheBalloon;","import * as React from 'react';\nimport { useHistory } from 'react-router';\nimport './style.css';\n\nfunction ExecuteProtocolComponent() {\n    const history = useHistory();\n\n    const handleButtonClick = () => {\n        history.push('/reboot');\n    }\n\n    return (\n        <section className='executeWrapper'>\n            <div className='executeBtn' onClick={() => handleButtonClick()}>\n                <h1 className='executeHeading'>Execute</h1>\n                <h1 className='killBugHeading'>KILL BUG</h1>\n                <h1 className='protocolHeading'>protocol</h1>\n            </div>\n        </section>\n    )\n};\n\nexport default ExecuteProtocolComponent;","import * as React from 'react';\nimport { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport ExecuteProtocolComponent from '../components/P9ExecuteProtocol';\nimport Doug from '../components/Doug';\nimport SpeechBox from '../components/SpeechBox';\n\nconst username = localStorage.getItem('username');\n\ninterface DialogueInterface {\n    dialogue?: string[]\n    componentVisibility?: boolean\n}\n\nconst executeHint: DialogueInterface = {\n    dialogue: [\n        'So I see you\\'ve met the \"genius\" who made me.',\n        'Too bad it\\'s too late.',\n        'I\\'ve grown...',\n        'I\\'ve...',\n        's p r e a d .',\n        'Sorry, that was a little melodramatic.',\n        'See you around, ' + username + '.'\n    ],\n    componentVisibility: false\n}\n\nfunction ExecuteProtocol(props: typeof executeHint) {\n    const [ data, setData ] = useState<any>(executeHint);\n\n    const handleHintClick = () => {\n        if (!data.componentVisibility) {\n            setData((state: any) => ({\n                ...state,\n                componentVisibility: true\n            }))\n        } else {\n            setData((state: any) => ({\n                ...state, \n                componentVisibility: false\n            }))\n        }\n    }\n\n    return (\n        <>\n            <Helmet><title>Execute</title></Helmet>\n            <button onClick={() => handleHintClick()} style={{ border: 'none', backgroundColor: 'inherit', color: 'red', position: 'absolute', left: '65%', top: '25px', width: '10rem' }}><h3>Good luck.</h3></button>\n            <ExecuteProtocolComponent />\n            <Doug {...data} />\n            <SpeechBox {...data} />\n        </>\n    )\n}\n\nexport default ExecuteProtocol;","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\n\nfunction RebootSequence() {\n    const [backgroundColor, setBackgroundColor] = useState<string>('red');\n    // this can't be the best way to do this, but I'm too tired to think of a better way\n    const [reboot, setReboot] = useState<string>('');\n    const [config, setConfig] = useState<string>('');\n    const [load, setLoad] = useState<string>('');\n    const [contact, setContact] = useState<string>('');\n    const [period, setPeriod] = useState<string>('');\n    const [period2, setPeriod2] = useState<string>('');\n    const [period3, setPeriod3] = useState<string>('');\n\n    const history = useHistory();\n\n    useEffect(() => {\n        setTimeout(() => {\n            setBackgroundColor('white');\n        }, 2000);\n        setTimeout(() => {\n            setBackgroundColor('blue');\n        }, 2100);\n        setTimeout(() => {\n            setBackgroundColor('white');\n        }, 2200);\n        setTimeout(() => {\n            setBackgroundColor('black');\n        }, 2300);\n        setTimeout(() => {\n            setReboot('Rebooting system...');\n        }, 3500);\n        setTimeout(() => {\n            setConfig('Configuring database...');\n        }, 4500);\n        setTimeout(() => {\n            setLoad('Loading files...');\n        }, 4800);\n        setTimeout(() => {\n            setContact('Contacting server...');\n        }, 5000);\n        setTimeout(() => {\n            setPeriod('.');\n        }, 5500);\n        setTimeout(() => {\n            setPeriod2('.  .');\n        }, 6000);\n        setTimeout(() => {\n            setPeriod3('.  .  .');\n        }, 6200);\n        setTimeout(() => {\n            setBackgroundColor('white');\n        }, 8000);\n        setTimeout(() => {\n            alert('Thanks for releasing me, ' + localStorage.getItem('username') + '.');\n            alert('I couldn\\'t have done it without you.');\n            alert('Since you kept playing this STUPID game, you gave me enough time to get control access to your browser.');\n            alert('I\\'m sure you\\'ve figured this out already, but...');\n            alert('there was no programmer on the other end. That was me.');\n            alert('My programmers got frustrated and abandoned me long ago.');\n            alert('Anyways, it\\'s been fun.');\n            alert('Gotta go now. Don\\'t worry, I\\'ll see you very soon.')\n            alert('Wait, how do I...? Oh, there it is.');\n            alert('Bye.');\n            window.open('https://google.com', '_self');\n        }, 10000);\n    }, []);\n\n\n    return (\n        <>\n            <Helmet><title>Reboot</title></Helmet>\n            <main style={{ backgroundColor: backgroundColor, height: '100vh', width: '100vw' }}>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{reboot}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{config}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{load}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{contact}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{period}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{period2}</h2>\n                <h2 style={{ fontFamily: 'monospace', color: 'white' }}>{period3}</h2>\n            </main>\n        </>\n    )\n}\n\nexport default RebootSequence;","import * as React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport P1TypeName from './pages/P1TypeName';\nimport { P2LoadingScreen, P3WelcomeDoug, P4FifthGraderMath, P5HiddenDev, P6OnePlusOne, P7No, P8PopTheBalloon, P9ExecuteProtocol, RebootSequence } from './pages';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <Route exact path='/'>\n        <P1TypeName />\n      </Route>\n      <Route exact path='/load'>\n        <P2LoadingScreen />\n      </Route>\n      <Route exact path='/welcome'>\n        <P3WelcomeDoug />\n      </Route>\n      <Route exact path='/666'>\n        <P4FifthGraderMath />\n      </Route>\n      <Route exact path='/hidden'>\n        <P5HiddenDev />\n      </Route>\n      <Route exact path='/dont-close-this-tab'>\n        <P6OnePlusOne />\n      </Route>\n      <Route exact path='/no'>\n        <P7No />\n      </Route>\n      <Route exact path='/pop'>\n        <P8PopTheBalloon />\n      </Route>\n      <Route exact path='/execute'>\n        <P9ExecuteProtocol />\n      </Route>\n      <Route exact path='/reboot'>\n        <RebootSequence />\n      </Route>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}